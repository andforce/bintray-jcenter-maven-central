apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

configurations {
    optional
    compile.extendsFrom optional
}

def siteUrl = project.websiteUrl
def gitUrl = project.vcsUrl
def libName = project.name

group = project.groupId
version = project.versionName

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']

    pkg {
        repo = "maven"  //发布到Bintray的maven库
        name = libName  //发布到Bintray上的项目名字
        desc = project.desc
        publicDownloadNumbers = true
        websiteUrl = siteUrl
        issueTrackerUrl = project.issueTrackerUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
        //attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
    }
}
configurations {
    optional
    compile.extendsFrom optional
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    options.encoding = "utf-8"
    source = android.sourceSets.main.java.srcDirs

    options {
        links "http://docs.oracle.com/javase/7/docs/api/"
        linksOffline "https://developer.android.com/reference",
                "${android.sdkDirectory}/docs/reference"
        encoding = "UTF-8"
    }
    exclude '**/BuildConfig.java'
    exclude '**/R.java'

    doFirst {
        classpath =
                files(
                        variant.javaCompile.classpath.files,
                        project.android.getBootClasspath())
    }

    doLast {
        copy {
            from "src/main/javadoc"
            into "$buildDir/docs/javadoc"
        }
    }
}

android.libraryVariants.all { variant ->
    task("generate${variant.name}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompiler.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"

        options {
            links "http://docs.oracle.com/javase/7/docs/api/"
            linksOffline "https://developer.android.com/reference", "${android.sdkDirectory}/docs/reference"
            encoding = "UTF-8"
        }

        exclude '**/BuildConfig.java'
        exclude '**/R.java'

        doFirst {
            classpath =
                    files(
                            variant.javaCompiler.classpath.files,
                            project.android.getBootClasspath())
        }
        doLast {
            copy {
                from "src/main/javadoc"
                into "$buildDir/docs/javadoc"
            }
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task jcenter << {
    println "Release ${version}"
}

jcenter.dependsOn(install)
jcenter.dependsOn(bintrayUpload)
